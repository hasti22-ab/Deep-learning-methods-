# -*- coding: utf-8 -*-
"""Alberta+bert+Roberta.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15cXSUXxWlWGiawGalolnm_8GegnM6Lv_
"""

!apt-get install tesseract-ocr -y
!pip install pytesseract

!pip install python-docx transformers

from google.colab import files
uploaded = files.upload()

#Extract the filename
file_name = list(uploaded.keys())[0]

import docx

# Function to extract text from a Word document
def read_word_file(file_path):
    doc = docx.Document(file_path)
    full_text = []
    for para in doc.paragraphs:
        full_text.append(para.text)
    return '\n'.join(full_text)

# Specify the file path (this will be the uploaded file's name)
file_path = 'Document.docx'  # Replace with your actual filename
doc_content = read_word_file(file_path)

# Print the content (optional)
#print(doc_content)



"""**DistilBert**"""

#not any difference in answer just run time increase

from transformers import DistilBertTokenizer, DistilBertForQuestionAnswering, pipeline

# Load the tokenizer and model for question answering
tokenizer = DistilBertTokenizer.from_pretrained('distilbert-base-cased-distilled-squad')
model = DistilBertForQuestionAnswering.from_pretrained('distilbert-base-cased-distilled-squad')

# Define the question and the document content
question = "What is the main point of this paper?"
context = doc_content  # This is the content extracted from your document

# Use the Hugging Face pipeline for question answering
nlp = pipeline("question-answering", model=model, tokenizer=tokenizer)

# Get the answer from the model
result = nlp( {'question': "In which regions did XYZ Corporation focus on expanding its market share?", 'context': doc_content})

# Print the result in text format
print(result)

"""**Alberta method**"""

from transformers import AlbertTokenizer, AlbertForQuestionAnswering, pipeline

# Load the tokenizer and model for ALBERT
tokenizer = AlbertTokenizer.from_pretrained('twmkn9/albert-base-v2-squad2')
model = AlbertForQuestionAnswering.from_pretrained('twmkn9/albert-base-v2-squad2')

# Define the question and the document content
question = "What is the main point of this paper?"
context = doc_content  # This is the content extracted from your document

# Use the Hugging Face pipeline for question answering
nlp = pipeline("question-answering", model=model, tokenizer=tokenizer)
# Get the answer from the model
result = nlp( {'question': "In which regions did XYZ Corporation focus on expanding its market share?", 'context': doc_content})

# Print the result in text format
print(result)

"""**bert**"""

from transformers import BertTokenizer, BertForQuestionAnswering, pipeline

# Load the tokenizer and model for BERT
tokenizer = BertTokenizer.from_pretrained('bert-large-uncased-whole-word-masking-finetuned-squad')
model = BertForQuestionAnswering.from_pretrained('bert-large-uncased-whole-word-masking-finetuned-squad')

# Define the question and the document content
question = "What is the main point of this paper?"
context = doc_content  # This is the content extracted from your document

# Use the Hugging Face pipeline for question answering
nlp = pipeline("question-answering", model=model, tokenizer=tokenizer)

# Get the answer from the model
result = nlp( {'question': "In which regions did XYZ Corporation focus on expanding its market share?", 'context': doc_content})
# Print the result in text format
print(result)

"""**RoBERTa**"""

#  8m 9s

from transformers import RobertaTokenizer, RobertaForQuestionAnswering, pipeline

tokenizer = RobertaTokenizer.from_pretrained('deepset/roberta-base-squad2')
model = RobertaForQuestionAnswering.from_pretrained('deepset/roberta-base-squad2')
# Define the question and the document content
question = "What is the main point of this paper?"
context = doc_content  # This is the content extracted from your document

nlp = pipeline("question-answering", model=model, tokenizer=tokenizer)
# Get the answer from the model
result = nlp( {'question': "In which regions did XYZ Corporation focus on expanding its market share?", 'context': doc_content})
# Print the result in text format
print(result)